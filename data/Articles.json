[
  {
    "data": {
      "title": "Plemiona planer",
      "text": "A project of increasing popularity  used by small community of players playing a browser game Tribal Wars. It gathers several hundred people a day and thousands per month. There is a dedicated Discord channel for more engaged users and payments to take advantage of all the features of the site.",
      "href": "https://plemiona-planer.pl/en/",
      "desc": "commercial",
      "avatar": "/articles/plemiona-planer.jpg"
    }
  },
  {
    "data": {
      "title": "Minimal FastAPI template",
      "text": "This is a minimal template for FastAPI backend + postgresql db as of 2021.11, async style for database sessions, endpoints and tests. It provides basic codebase that almost every application has, but nothing more.",
      "href": "https://github.com/rafsaf/minimal-fastapi-postgres-template",
      "desc": "open source",
      "avatar": "/articles/minimal-fastapi-template.png"
    }
  },
  {
    "data": {
      "title": "Respo",
      "text": "Respo states for Resource Policy and is tiny, user friendly tool for building RBAC systems based on single yml file, mainly with FastAPI framework in mind. In most cases – for even large set of roles and organizations – single file would be enough to provide restricting system access.",
      "href": "https://rafsaf.github.io/respo/",
      "desc": "open source",
      "avatar": "/articles/respo.jpg"
    }
  },
  {
    "data": {
      "title": "fastapi-plan",
      "text": "This simple pypi package is used to create a new FastAPI application with optimal project structure, postgresql database and other extras. Uses github actions and pytest for testing, poetry, cookiecutter, docker.",
      "href": "https://pypi.org/project/fastapi-plan/",
      "desc": "open source",
      "avatar": "/articles/fastapi-plan.jpg"
    }
  },
  {
    "data": {
      "title": "docker fastapi projects",
      "text": "The main emphasis in creating this project was placed on learning the docker and docker-compose technology and creating APIs in python using the modern FastAPI framework. Besides, it is an example of documentation written with Sphinx and hosted on readthedocs.",
      "href": "https://docker-fastapi-projects.readthedocs.io/",
      "desc": "open source",
      "avatar": "/articles/docker-fastapi.jpg"
    }
  },
  {
    "data": {
      "title": "ziemiomorze",
      "text": "An unfinished blog / wiki project for the Earthsea universe by Ursula Le Guin, with the ability to add your own articles thanks to a simple API. This is an application written in React.js, it will be rewritten in the near future.",
      "href": "https://new.ziemiomorze.pl/",
      "desc": "personal",
      "avatar": "/articles/ziemiomorze.png"
    }
  },
  {
    "data": {
      "title": "tea station",
      "text": "Tea Station very simple site project based on the CSS and HTML course, build with Gatsby.js and hosted on netlify. In the design, the main focus is on css float.",
      "href": "https://rafsaf-gatsby-tea-station.netlify.app/",
      "desc": "css course",
      "avatar": "/articles/tea-station.jpg"
    }
  },
  {
    "data": {
      "title": "backroad",
      "text": "Backroad site project based on the CSS and HTML course, build with Gatsby.js and hosted on netlify. In the design, the main focus is on css flex.",
      "href": "https://rafsaf-gatsby-backroad.netlify.app",
      "desc": "css course",
      "avatar": "/articles/backroad.jpg"
    }
  }
]
